{"remainingRequest":"/Users/tiannaalinalopes/projects/wine-educator/node_modules/babel-loader/lib/index.js!/Users/tiannaalinalopes/projects/wine-educator/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/tiannaalinalopes/projects/wine-educator/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/tiannaalinalopes/projects/wine-educator/src/components/DecisionComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tiannaalinalopes/projects/wine-educator/src/components/DecisionComponent.vue","mtime":1734479109259},{"path":"/Users/tiannaalinalopes/projects/wine-educator/babel.config.js","mtime":1734451143335},{"path":"/Users/tiannaalinalopes/projects/wine-educator/node_modules/cache-loader/dist/cjs.js","mtime":1734451268225},{"path":"/Users/tiannaalinalopes/projects/wine-educator/node_modules/babel-loader/lib/index.js","mtime":1734451268173},{"path":"/Users/tiannaalinalopes/projects/wine-educator/node_modules/cache-loader/dist/cjs.js","mtime":1734451268225},{"path":"/Users/tiannaalinalopes/projects/wine-educator/node_modules/vue-loader-v16/dist/index.js","mtime":1734451274975}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmZpbmQuanMiOwppbXBvcnQgdHdpbmVEYXRhIGZyb20gIkAvZGF0YS9yZWdpb24taW5mby5qc29uIjsgLy8gQ29udmVydCBUd2luZSB0byBKU09OCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkRlY2lzaW9uQ29tcG9uZW50IiwKICBwcm9wczogewogICAgcmVnaW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICByZWdpb25Db250ZW50KCkgewogICAgICAvLyBNYXRjaCByZWdpb24gbmFtZSB3aXRoIFR3aW5lIEpTT04gZGF0YQogICAgICByZXR1cm4gdHdpbmVEYXRhLmZpbmQoZW50cnkgPT4gZW50cnkubmFtZSA9PT0gdGhpcy5yZWdpb24pOwogICAgfQogIH0KfTs="},{"version":3,"names":["twineData","name","props","region","type","String","required","computed","regionContent","find","entry"],"sources":["/Users/tiannaalinalopes/projects/wine-educator/src/components/DecisionComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>{{ region }}</h2>\n    <div v-if=\"regionContent\">\n      <ul>\n        <li v-for=\"link in regionContent.links\" :key=\"link\">\n          <router-link :to=\"`/region/${link}`\">{{ link }}</router-link>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>No content available for this region.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport twineData from \"@/data/region-info.json\"; // Convert Twine to JSON\n\nexport default {\n  name: \"DecisionComponent\",\n  props: {\n    region: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    regionContent() {\n      // Match region name with Twine JSON data\n      return twineData.find((entry) => entry.name === this.region);\n    },\n  },\n};\n</script>\n"],"mappings":";;AAiBA,OAAOA,SAAQ,MAAO,yBAAyB,EAAE;;AAEjD,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd;MACA,OAAOR,SAAS,CAACS,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACT,IAAG,KAAM,IAAI,CAACE,MAAM,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]}]}